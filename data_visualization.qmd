---
title: "data_visualization"
format: html
editor: visual
---


```{r}
library(tidyverse)
```
### Clean the data
```{r}
# Read the CSV file
oil_data <- read.csv("data/oil_consumption_total.csv")
oil_tibble <- as.tibble(oil_data)
print(oil_tibble)

column_names <- colnames(oil_tibble)

# Skip the first element and remove 'X' from the rest
new_column_names <- c("country", substring(column_names[-1], 2))
colnames(oil_tibble) <- new_column_names

oil_tibble <- oil_tibble |> 
  mutate_all(~na_if(.,""))
print(oil_tibble)
# Now, 'oil_tibble' has empty values replaced with NA

# Function to convert units to numeric
convert_units <- function(x) {
  # Extract numeric part
  numeric_part <- as.numeric(str_extract(x, "\\d+"))

  # Extract unit part
  unit_part <- str_extract(x, "[A-Za-z]+")

  # Convert units to multiplier
  multiplier <- case_when(
    toupper(unit_part) == "K" ~ 1e3,
    toupper(unit_part) == "M" ~ 1e6,
    TRUE ~ 1
  )

  # Multiply numeric part with the multiplier
  result <- as.integer(numeric_part * multiplier)

  return(result)
}


oil_tibble <- oil_tibble |> 
  mutate(across(-country, convert_units))

print(oil_tibble)
```

### Oil consumption in Luxembourg over years(1965 to 2019)
```{r}
library(ggplot2)

lux_data <- oil_tibble |> 
  filter(country == "Luxembourg")

# Extract years and corresponding oil consumption
years <- names(lux_data)[2:length(lux_data)]
#print(years)
oil_consumption <- unlist(lux_data[, 2:length(lux_data)])

# Create a data frame for plotting
lux_plot_data <- data.frame(Year = as.numeric(years), Oil_Consumption = oil_consumption) 
# Plot the data
ggplot(lux_plot_data, aes(x = Year, y = Oil_Consumption)) +
  geom_point() +
  labs(title = "Oil Consumption in Luxembourg Over the Years",
       x = "Year",
       y = "Oil Consumption")

```
```{r}
library(ggplot2)
usa_data <- oil_tibble |> 
  filter(country == "USA")

# Extract years and corresponding oil consumption
years <- names(usa_data)[2:length(usa_data)]
#print(years)
oil_consumption <- unlist(usa_data[, 2:length(usa_data)])

# Create a data frame for plotting
usa_plot_data <- data.frame(Year = as.numeric(years), Oil_Consumption = oil_consumption) 
# Plot the data
ggplot(usa_plot_data, aes(x = Year, y = Oil_Consumption)) +
  geom_point() +
  labs(title = "Oil Consumption in USA Over the Years",
       x = "Year",
       y = "Oil Consumption")

```


```{r}
library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble |> 
  filter(!is.na(`1965`))

# Plot the data in a bar plot
ggplot(plot_data, aes(x = country, y = `1965`)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Oil Consumption in 1965 by Country",
       x = "Country",
       y = "Oil Consumption in 1965") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility

```





```{r}
library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble |> 
  filter(!is.na(`1965`))

# Plot the data in a bar plot with switched x and y values
ggplot(plot_data, aes(x = `1965`, y = country)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Oil Consumption in 1965 by Country",
       x = "Oil Consumption in 1965",
       y = "Country") +
  theme(axis.text.y = element_text(angle = 0, hjust = 1))  # Adjust y-axis labels if needed

```



```{r}
library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble |> 
  filter(!is.na(`1965`))

# Plot the data in a horizontal bar plot with switched x and y values
ggplot(plot_data, aes(x = `1965`, y = reorder(country, -`1965`))) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Oil Consumption in 1965 by Country",
       x = "Oil Consumption in 1965",
       y = "Country") +
  theme(axis.text.y = element_text(hjust = 1, margin = margin(t = 0.8, b = 0.1)))  # Adjust y-axis labels
```






```{r}

library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble |> 
  filter(!is.na(`1965`))

# Plot the data in a horizontal bar plot with switched x and y values
ggplot(plot_data, aes(x = `1965`, y = reorder(country, -`1965`))) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Oil Consumption in 1965 by Country",
       x = "Oil Consumption in 1965",
       y = "Country") +
  theme(axis.text.y = element_text(hjust = 0),
        plot.margin = margin(0.2, 1, 1, 3, unit = "cm"))  # Adjust right margin

```









```{r}
library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble |> 
  filter(!is.na(`1965`))

# Plot the data in a horizontal bar plot with a legend
ggplot(plot_data, aes(x = `1965`, y = country, fill = country)) +
  geom_histogram() +
  labs(title = "Oil Consumption in 1965 by Country",
       x = "Oil Consumption in 1965",
       y = "Country") +
  theme(legend.position = "bottom") +  # Adjust legend position
  guides(fill = guide_legend(nrow = 2, byrow = TRUE))  # Adjust legend layout


```







```{r}

library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble %>%
  filter(!is.na(`1965`))

# Create a unique color for each country
country_colors <- rainbow(length(unique(plot_data$country)))

# Map colors to countries
plot_data$color <- country_colors[match(plot_data$country, unique(plot_data$country))]

# Plot the data with legend
ggplot(plot_data, aes(x = `1965`, y = country, fill = color)) +
  geom_histogram() +
  labs(title = "Oil Consumption in 1965 by Country",
       x = "Oil Consumption in 1965") +
  theme(legend.position = "bottom") +
  guides(fill = guide_legend(override.aes = list(color = country_colors),
                             title = "Country"))

```
```{r}
library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble %>%
  filter(!is.na(`1965`))

# Order the data by oil consumption in 1965 in descending order and take the top 10
top_10_data <- plot_data |> 
  arrange(desc(`1965`)) |> 
  slice(1:10)

# Plot the data without legend
ggplot(top_10_data, aes(x = `1965`, y = reorder(country, -`1965`), fill = country)) +
  geom_bar(stat = "identity") +
  labs(title = "Top 10 Oil Consumption in 1965",
       x = "Oil Consumption in 1965",
       y = "Country") +
  theme(legend.position = "none")


```
```{r}
library(ggplot2)

# Filter rows where oil consumption in 1965 is not NA
plot_data <- oil_tibble |> 
  filter(!is.na(`1965`))

# Order the data by oil consumption in 1965 in descending order and take the top 10
top_10_data <- plot_data |> 
  arrange(desc(`1965`)) |> 
  slice(1:10)

# Plot the data without legend in a polar bar plot
ggplot(top_10_data, aes(x = "", y = `1965`, fill = country)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  labs(title = "Top 10 Oil Consumption in 1965",
       x = NULL,
       y = "Oil Consumption in 1965") +
  theme()

```


### data in maximale temperature in Luxembourg city

```{r}
library(tidyverse)
maximal_minimal_temperature <- readxl::read_excel("data/Temperature.xlsx")
print(maximal_minimal_temperature)

```









